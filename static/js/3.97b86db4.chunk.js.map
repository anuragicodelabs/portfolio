{"version":3,"sources":["components/Experience.jsx","components/Header.jsx","components/utils/hooks.js"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","dateStyle","width","marginLeft","bodyContainerStyle","Experience","props","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","isMobile","useCheckMobileScreen","_jsxs","_Fragment","children","_jsx","Header","title","className","Container","Timeline","lineColor","timelineLineColor","map","item","id","Fade","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","Object","assign","color","_objectSpread","subtitle","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener"],"mappings":"gPAaMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,IAEhBK,UAAW,CACTC,MAAO,QACPC,WAAY,QAEdC,mBAAoB,CAClBF,MAAO,UAsFIG,UAlFf,SAAoBC,GAClB,IAAMC,EAAQC,qBAAWC,KACjBC,EAAWJ,EAAXI,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAEH,IAAMC,EAAWC,iCAEjB,OACEC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACC,UAAM,CAACC,MAAOxB,IAEdK,EAEGiB,cAAA,OAAKG,UAAU,4BAA2BJ,SACxCC,cAACI,IAAS,CAAAL,SACRC,cAACK,WAAQ,CACPC,UAAW/B,EAAMgC,kBAAkBR,SAElChB,EAAKyB,KAAI,SAACC,EAAMC,GAAE,OACjBV,cAACW,IAAI,CAAAZ,SACHF,eAACe,eAAY,CAEXC,SAAUJ,EAAKI,SACf5C,UAAW0B,EAAW,CAAC,EAAIrC,EAAOW,UAClC6C,eAAgB,CAAEC,WAAYxC,EAAMyC,aACpCC,MAAO3D,EAAOU,UACdI,mBAAoB8C,OAAOC,OAAO,CAAEC,MAAO7C,EAAM6C,OAASzB,EAAW,CAAC,EAAIrC,EAAOc,oBAAoB2B,SAAA,CAErGC,cAAA,MAAIG,UAAU,aAAYJ,SACvBU,EAAKP,QAERL,eAAA,OAAKoB,MAAO3D,EAAOI,uBAAuBqC,SAAA,CACxCC,cAAA,MAAIiB,MAAKI,wBAAA,GAAO/D,EAAOO,eAAa,IAAEuD,MAAO7C,EAAMyC,cAAcjB,SAC9DU,EAAKa,WAEPb,EAAKc,UACJ1B,eAAA,MAAIoB,MAAO3D,EAAOS,YAAYgC,SAAA,CAAC,WAE5B,IACAU,EAAKc,eAIZvB,cAAA,MAAIiB,MAAO3D,EAAOC,QAAQwC,SACvBU,EAAKe,gBAAgBhB,KAAI,SAACiB,GAAK,OAC9B5B,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAAD,SACEC,cAAC0B,IAAa,CACZ3B,SAAU0B,EACVE,WAAY,CACVC,EAAG,YAIT5B,cAAA,WATQyB,EAUJ,QAlCLhB,EAAKP,MAAQO,EAAKI,WAFhBH,EAwCJ,UAKbV,cAAC6B,UAAe,MAG5B,C,wDCpHA,6BAae5B,UATf,SAAgB3B,GACd,IAAQ4B,EAAU5B,EAAV4B,MACR,OAAOF,cAAA,OAAKG,UAAU,SAAQJ,SAAEG,GAClC,C,gHCLaN,EAAuB,WAChC,IAAAjB,EAA0BC,mBAASkD,OAAOC,YAAWlD,EAAAC,YAAAH,EAAA,GAA9CT,EAAKW,EAAA,GAAEmD,EAAQnD,EAAA,GAChBoD,EAAyB,WAC3BD,EAASF,OAAOC,WACpB,EASA,OAPA9C,qBAAU,WAEN,OADA6C,OAAOI,iBAAiB,SAAUD,GAC3B,WACHH,OAAOK,oBAAoB,SAAUF,EACzC,CACJ,GAAG,IAEK/D,GAAS,GACrB,C","file":"static/js/3.97b86db4.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\nimport { useCheckMobileScreen } from './utils/hooks';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n  dateStyle: {\n    width: '200px',\n    marginLeft: '20px'\n  },\n  bodyContainerStyle: {\n    width: '700px',\n  }\n};\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  const isMobile = useCheckMobileScreen();\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item, id) => (\n                  <Fade key={id}>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateStyle={isMobile ? {} : styles.dateStyle}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={Object.assign({ color: theme.color }, isMobile ? {} : styles.bodyContainerStyle)}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                          {item.subtitle}\n                        </h4>\n                        {item.workType && (\n                          <h5 style={styles.inlineChild}>\n                            &nbsp;Â·\n                            {' '}\n                            {item.workType}\n                          </h5>\n                        )}\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner />}\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\n\nexport const useCheckMobileScreen = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const handleWindowSizeChange = () => {\n        setWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n\n    return (width <= 768);\n}\n"],"sourceRoot":""}