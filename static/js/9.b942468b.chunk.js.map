{"version":3,"sources":["components/utils/hooks.js"],"names":["useCheckMobileScreen","_useState","useState","window","innerWidth","_useState2","_slicedToArray","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener"],"mappings":"qLAEaA,EAAuB,WAChC,IAAAC,EAA0BC,mBAASC,OAAOC,YAAWC,EAAAC,YAAAL,EAAA,GAA9CM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,EAAyB,WAC3BD,EAASL,OAAOC,WACpB,EASA,OAPAM,qBAAU,WAEN,OADAP,OAAOQ,iBAAiB,SAAUF,GAC3B,WACHN,OAAOS,oBAAoB,SAAUH,EACzC,CACJ,GAAG,IAEKF,GAAS,GACrB,C","file":"static/js/9.b942468b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const useCheckMobileScreen = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const handleWindowSizeChange = () => {\n        setWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n\n    return (width <= 768);\n}\n"],"sourceRoot":""}